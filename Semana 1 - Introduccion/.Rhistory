ggplot(data = iris, aes(x = Sepalo.Ancho, y = Sepalo.Largo, color = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point() +
geom_smooth() + # agregamos una linea de tendencia para cada especie (esto se define en la primera linea)
theme_minimal()
ggplot(data = iris, aes(x = Sepalo.Ancho, y = Sepalo.Largo, color = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point() +
geom_smooth(se = FALSE) + #Acá quitamos el area de define el intervalo de confianza de la linea de tendencia
theme_minimal()
ggplot(data = iris, aes(x = Sepalo.Ancho, y = Sepalo.Largo)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point(aes(color = Especie)) +
geom_smooth(method = "lm") + # crea linea de tendencia representada por una regresión linea (lm = linear model)
theme_minimal()
ggplot(data = iris, aes(x = Sepalo.Ancho, y = Sepalo.Largo, color = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point() +
geom_smooth(method = "lm") + # agregamos una linea de tendencia para cada especie (esto se define en la primera linea)
theme_minimal()
ggplot(data = iris, aes(x = Sepalo.Ancho, y = Sepalo.Largo, color = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point() +
geom_smooth(se = FALSE, method = "lm") + #Acá quitamos el area de define el intervalo de confianza de la linea de tendencia
theme_minimal()
library(ggforce)
ggplot(iris, aes(Petalo.Largo, Petalo.Ancho, colour = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point() +
facet_zoom(x = Especie == "versicolor") +
theme_bw() # cambié de theme_minimal a theme_bw para destacar
library(ggalt)
library(ggfortify)
# Calcular componentes principales
df <- iris[c(1, 2, 3, 4)]
pca_mod <- prcomp(df)  # compute principal components
# Data frames con componentes principales
df_pc <- data.frame(pca_mod$x, Especie=iris$Especie)  # dataframe con todos los componentes principales
df_pc_vir <- df_pc %>% filter(Especie == "virginica")  # df para 'virginica'
df_pc_set <- df_pc %>% filter(Especie == "setosa")  # df para 'setosa'
df_pc_ver <- df_pc %>% filter(Especie == "versicolor")  # df para 'versicolor'
# Gráfico
ggplot(df_pc, aes(PC1, PC2, col = Especie, shape = Especie)) + #base del gráfico, se definen las variables para los ejes y la variable definirá color y forma
geom_point(size = 2) +   # gráfica puntos
labs(title = "Clusters de plantas del género Iris",
subtitle = "Utilizando componentes principales (PC1 y PC2) como ejes X e Y",
caption = "Fuente: Datos 'Iris'") + # Distintas etiquetas (texto) usado en el gráfico
coord_cartesian(xlim = 1.2 * c(min(df_pc$PC1), max(df_pc$PC1)),
ylim = 1.2 * c(min(df_pc$PC2), max(df_pc$PC2))) +   # ajuste de los ejes X e Y
geom_encircle(data = df_pc_vir, aes(x = PC1, y = PC2)) +   # dibujar circulos
geom_encircle(data = df_pc_set, aes(x = PC1, y = PC2)) +
geom_encircle(data = df_pc_ver, aes(x = PC1, y = PC2)) +
theme_minimal()
library(ggalt)
library(ggfortify)
# Calcular componentes principales
df <- iris[c(1, 2, 3, 4)]
pca_mod <- prcomp(df)  # compute principal components
# Data frames con componentes principales
df_pc <- data.frame(pca_mod$x, Especie=iris$Especie)  # dataframe con todos los componentes principales
df_pc_vir <- df_pc %>% filter(Especie == "virginica")  # df para 'virginica'
df_pc_set <- df_pc %>% filter(Especie == "setosa")  # df para 'setosa'
df_pc_ver <- df_pc %>% filter(Especie == "versicolor")  # df para 'versicolor'
# Gráfico
ggplot(df_pc, aes(PC1, PC2, col = Especie, shape = Especie)) + #base del gráfico, se definen las variables para los ejes y la variable definirá color y forma
geom_point(size = 2) +   # gráfica puntos
labs(title = "Clusters de plantas del género Iris",
subtitle = "Utilizando componentes principales (PC1 y PC2) como ejes X e Y",
caption = "Fuente: Datos 'Iris'") + # Distintas etiquetas (texto) usado en el gráfico
coord_cartesian(xlim = 1.2 * c(min(df_pc$PC1), max(df_pc$PC1)),
ylim = 1.2 * c(min(df_pc$PC2), max(df_pc$PC2))) +   # ajuste de los ejes X e Y
geom_encircle(data = df_pc_vir, aes(x = PC1, y = PC2)) +   # dibujar circulos
geom_encircle(data = df_pc_set, aes(x = PC1, y = PC2)) +
geom_encircle(data = df_pc_ver, aes(x = PC1, y = PC2)) +
theme_minimal()
library(gridExtra)
LP <- ggplot(iris, aes(x = Petalo.Largo, colour = Especie, fill = Especie)) +
geom_density(alpha = 0.3) +
geom_vline(aes(xintercept = mean(Petalo.Largo), colour = Especie), linetype = "dashed", color = "grey", size = 1) +
xlab("Largo de Pétalo (cm)") +
ylab("Densidad") +
theme_minimal() +
theme(legend.position = "none")
AP <- ggplot(iris, aes(x = Petalo.Ancho, colour = Especie, fill = Especie)) +
geom_density(alpha = 0.3) +
geom_vline(aes(xintercept = mean(Petalo.Ancho), colour = Especie), linetype = "dashed", color = "grey", size = 1) +
xlab("Ancho de Pétalo (cm)") +
ylab("Densidad") +
theme_minimal() +
theme(legend.position = "none")
AS <- ggplot(iris, aes(x = Sepalo.Ancho, colour = Especie, fill = Especie)) +
geom_density(alpha = 0.3) +
geom_vline(aes(xintercept = mean(Sepalo.Ancho), colour = Especie), linetype = "dashed", color = "grey", size = 1) +
xlab("Ancho de Sépalo (cm)") +
ylab("Densidad") +
theme_minimal() +
theme(legend.position = "none")
LS <- ggplot(iris, aes(x = Sepalo.Largo, colour = Especie, fill = Especie)) +
geom_density(alpha = 0.3) +
geom_vline(aes(xintercept = mean(Sepalo.Largo), colour = Especie), linetype = "dashed", color = "grey", size = 1) +
xlab("Largo de Sépalo (cm)") +
ylab("Densidad") +
theme_minimal() +
theme(legend.position = "none")
# Plot all density visualizations
grid.arrange(LP + ggtitle(""),
AP  + ggtitle(""),
AS + ggtitle(""),
LS  + ggtitle(""),
nrow = 2
)
(LP|AE) / (AS|LS)
(LP|AP) / (AS|LS)
library(patchwork)
(LP|AP) / (AS|LS)
BLS <- ggplot(iris, aes(Especie, Sepalo.Largo, fill = Especie)) +
geom_boxplot() +
scale_y_continuous("Largo de Sépalo (cm)", breaks = seq(0, 30, by = 0.5)) +
theme_minimal() +
theme(legend.position = "none")
BAS <- ggplot(iris, aes(Especie, Sepalo.Ancho, fill = Especie)) +
geom_boxplot() +
scale_y_continuous("Ancho de Sépalo (cm)", breaks = seq(0, 30, by = 0.5)) +
theme_minimal() +
theme(legend.position = "none")
BLP <- ggplot(iris, aes(Especie, Petalo.Largo, fill = Especie)) +
geom_boxplot() +
scale_y_continuous("Largo de Pétalo (cm)", breaks = seq(0, 30, by = 0.5)) +
theme_minimal() +
theme(legend.position = "none")
BAP <- ggplot(iris, aes(Especie, Petalo.Ancho, fill = Especie)) +
geom_boxplot() +
scale_y_continuous("Ancho de Pétalo (cm)", breaks = seq(0, 30, by = 0.5)) +
theme_minimal() +
theme(legend.position = "none")
# Plot all visualizations
grid.arrange(BLS  + ggtitle(""),
BAS  + ggtitle(""),
BLP + ggtitle(""),
BAP + ggtitle(""),
nrow = 2)
BLS <- ggplot(iris, aes(Especie, Sepalo.Largo, fill = Especie)) +
geom_boxplot() +
scale_y_continuous("Largo de Sépalo (cm)", breaks = seq(0, 30, by = 0.5)) +
theme_minimal() +
theme(legend.position = "none")
BAS <- ggplot(iris, aes(Especie, Sepalo.Ancho, fill = Especie)) +
geom_boxplot() +
scale_y_continuous("Ancho de Sépalo (cm)", breaks = seq(0, 30, by = 0.5)) +
theme_minimal() +
theme(legend.position = "none")
BLP <- ggplot(iris, aes(Especie, Petalo.Largo, fill = Especie)) +
geom_boxplot() +
scale_y_continuous("Largo de Pétalo (cm)", breaks = seq(0, 30, by = 0.5)) +
theme_minimal() +
theme(legend.position = "none")
BAP <- ggplot(iris, aes(Especie, Petalo.Ancho, fill = Especie)) +
geom_boxplot() +
scale_y_continuous("Ancho de Pétalo (cm)", breaks = seq(0, 30, by = 0.5)) +
theme_minimal() +
theme(legend.position = "none")
# Plotear todo junto
(BLS|BAS) / (BLP|BAP)
library(GGally)
ggpairs(data = iris[1:4],
title = "Correlaciones entre variables") +
theme_minimal()
library(ggpubr)
ggscatterhist(
iris, x = "Sepalo.Largo", y = "Sepalo.Ancho",
xlab = "Largo de Sépalo (cm)",
ylab = "Ancho de Sépalo (cm)",
color = "Especie", size = 3, alpha = 0.6,
margin.params = list(fill = "Especie", color = "black", size = 0.2)
)
library(ggridges)
ggplot(iris, aes(x = Sepalo.Largo, y = Especie)) +
geom_density_ridges(aes(fill = Especie)) +
theme_minimal()
ggplot(aplicaciones, aes(x = Dosis, y = Largo)) +
geom_col(aes(color = Tratamiento, fill = Tratamiento),
position = position_dodge(), width = 0.8) +
theme_minimal()
ggplot(aplicaciones, aes(x = Dosis, y = Largo)) +
geom_col(aes(color = Tratamiento, fill = Tratamiento),
position = position_stack(), width = 0.8) +
theme_minimal()
aplicaciones %>%
group_by(Tratamiento, Dosis) %>%
summarise(Largo = mean(Largo)) %>%
ggplot(aes(x = Dosis, y = Largo, group = Tratamiento)) +
geom_line(aes(linetype = Tratamiento)) +
geom_point(aes(shape = Tratamiento)) +
theme_minimal()
aplicaciones %>%
group_by(Dosis) %>%
summarise(
sd = sd(Largo, na.rm = TRUE),
Largo = mean(Largo)) %>%
ggplot(aes(Dosis, Largo)) +
geom_line(aes(group = 1)) +
geom_errorbar(aes(ymin = Largo - sd, ymax = Largo + sd), width = 0.2) +
geom_point(size = 2) +
theme_minimal()
aplicaciones %>%
group_by(Dosis) %>%
summarise(
sd = sd(Largo, na.rm = TRUE),
Largo = mean(Largo)) %>%
ggplot(aes(Dosis, Largo)) +
geom_bar(stat = "identity", fill = "lightgray", color = "black") +
geom_errorbar(aes(ymin = Largo, ymax = Largo + sd), width = 0.2) +
theme_minimal()
aplicaciones %>%
group_by(Dosis, Tratamiento) %>%
summarise(
sd = sd(Largo, na.rm = TRUE),
Largo = mean(Largo)) %>%
ggplot(aes(Dosis, Largo)) +
geom_line(aes(linetype = Tratamiento, group = Tratamiento)) +
geom_point() +
geom_errorbar(
aes(ymin = Largo - sd, ymax = Largo + sd),
width = 0.2) +
theme_minimal()
ggplot(iris, aes(Petalo.Largo, Petalo.Ancho, colour = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point()
8.
ggplot(data = iris, aes(x = Sepalo.Ancho, y = Sepalo.Largo, color = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point()
ggplot(data = iris, aes(x = Sepalo.Ancho, y = Sepalo.Largo, color = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point() +
facet_zoom(x = Especie == "versicolor")
ggplot(data = iris, aes(x = Sepalo.Ancho, y = Sepalo.Largo, color = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point()
?facet_zoom
ggplot(iris, aes(Petalo.Largo, Petalo.Ancho, colour = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point() +
facet_zoom(xy = Especie == "versicolor") +
theme_bw() # cambié de theme_minimal a theme_bw para destacar
ggplot(iris, aes(Petalo.Largo, Petalo.Ancho, colour = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point() +
facet_zoom(y = Especie == "versicolor") +
theme_bw() # cambié de theme_minimal a theme_bw para destacar
ggplot(iris, aes(Petalo.Largo, Petalo.Ancho, colour = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point() +
facet_zoom(x = Especie == "versicolor") +
theme_bw() # cambié de theme_minimal a theme_bw para destacar
ggplot(iris, aes(Petalo.Largo, Petalo.Ancho, colour = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point() +
facet_zoom(xy = Especie == "versicolor") +
theme_bw() # cambié de theme_minimal a theme_bw para destacar
ggplot(iris, aes(Petalo.Largo, Petalo.Ancho, colour = Especie)) +
xlab("Ancho de Sépalo (cm)") +
ylab("Largo de Sépalo (cm)") +
geom_point() +
facet_zoom(yx = Especie == "versicolor") +
theme_bw() # cambié de theme_minimal a theme_bw para destacar
decorate('graf1')  %>%
flair_funs() %>%
flair_args(background = "pink") %>%
flair_input_vals(background = "Aquamarine") %>%
flair('datos_covid', background = "orange")
library(readxl)
library(tidyverse)
library(patchwork)
library(flair)
decorate('graf1')  %>%
flair_funs() %>%
flair_args(background = "pink") %>%
flair_input_vals(background = "Aquamarine") %>%
flair('datos_covid', background = "orange")
library(readr)
(datos_covid <- read_csv("datos/covid_datos_region.csv"))
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob))
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob))
decorate('graf1')  %>%
flair_funs() %>%
flair_args(background = "pink") %>%
flair_input_vals(background = "Aquamarine") %>%
flair('datos_covid', background = "orange")
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob)) +
geom_line()
decorate('graf4') %>%
flair('geom_line')
rm(list = ls())
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
error = FALSE,
fig.align = 'center',
out.width='60%')
library(readxl)
library(tidyverse)
library(patchwork)
library(flair)
knitr::include_graphics("Imagenes/MalGraf.png")
knitr::include_graphics("Imagenes/Ver3.png")
knitr::include_graphics("Imagenes/Ver3.png")
knitr::include_graphics("Imagenes/Ver3.2.png")
knitr::include_graphics("Imagenes/MalGraf.png")
datos_graf <- data.frame(
educ = c("Finish no school", "Finish 1 year", "Finish 3 years", "Graduate, 2.0 GPA", "Graduate, 3.0 GPA", "Graduate, 3.75 GPA"),
inc = c(480, 520, 650, 810, 940, 1070)
)
datos_graf %>%
ggplot(aes(x = reorder(educ, -inc), y = inc)) +
geom_col(width = 0.5, fill = "dark blue") +
coord_flip() +
labs(x = NULL, y = NULL) +
scale_y_continuous(n.breaks = 9) +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(colour = "dark blue", size = 0.1)) +
labs(title = "Discounted Expected Lifetime Earnings, VN(t')",
subtitle = "(Income in thousands)")
knitr::include_graphics("Imagenes/CapasGgplot.png")
library(readr)
(datos_mundo <- read.csv("datos/datos_mundo2007.csv"))
ggplot(datos_mundo)
ggplot(datos_mundo, aes(x = gdpPercap))
ggplot(datos_mundo, aes(x = gdpPercap)) +
geom_histogram()
ggplot(datos_mundo, aes(x = gdpPercap)) +
geom_histogram(bins = 100, fill = "blue")
ggplot(datos_mundo, aes(x = gdpPercap)) +
geom_histogram(binwidth = 5000, col = "blue")
knitr::include_graphics("Imagenes/Help.PNG")
ggplot(datos_mundo, aes(x = continente, y = gdpPercap))
ggplot(datos_mundo, aes(x = continente, y = gdpPercap)) +
geom_point()
ggplot(datos_mundo, aes(x = continente, y = gdpPercap)) +
geom_boxplot()
knitr::include_graphics("Imagenes/BoxPlot.PNG")
ggplot(datos_mundo, aes(x = continente, y = gdpPercap)) +
geom_boxplot() +
geom_point()
ggplot(datos_mundo, aes(x = continente, y = gdpPercap)) +
geom_boxplot() +
geom_point() +
coord_flip()
ggplot(datos_mundo, aes(x = gdpPercap, y = ExpVida)) +
geom_point()
ggplot(datos_mundo, aes(x = gdpPercap, y = ExpVida)) +
geom_point(aes(col = continente))
ggplot(datos_mundo, aes(x = gdpPercap, y = ExpVida)) +
geom_point() +
geom_smooth()
ggplot(datos_mundo,
aes(x = log(gdpPercap), y = ExpVida)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm")
ggplot(datos_mundo,
aes(x = gdpPercap, y = ExpVida)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm",
formula = y ~ log(x))
library(readr)
(datos_covid <- read_csv("datos/covid_datos_region.csv"))
glimpse(datos_covid)
summary(datos_covid)
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob))
decorate('graf1')  %>%
flair_funs() %>%
flair_args(background = "pink") %>%
flair_input_vals(background = "Aquamarine") %>%
flair('datos_covid', background = "orange")
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob)) +
geom_line()
decorate('graf4') %>%
flair('geom_line')
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob, group = region)) +
geom_line()
decorate('graf4b') %>%
flair('group', background = "pink") %>%
flair('region', background = "Aquamarine")
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob, col = region)) +
geom_line()
decorate('graf5') %>%
flair('col', background = "pink") %>%
flair('region', background = "Aquamarine")
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob)) +
geom_line(aes(col = region), size = 1) +
facet_wrap(vars(region ))
decorate('graf8') %>%
flair('vars') %>%
flair('facet_wrap') %>%
flair('region ', background = "Aquamarine")
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob)) +
geom_line(aes(col = region), size = 1) +
facet_wrap(vars(region), scales = "free_y")
decorate('graf8b') %>%
flair('scales', background = "pink") %>%
flair('"free_y"', background = "Aquamarine")
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob)) +
geom_line(aes(col = region), size = 1) +
facet_wrap(vars(region), ncol = 5)
decorate('graf8c') %>%
flair('ncol', background = "pink") %>%
flair('5', background = "Aquamarine")
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob)) +
geom_line(aes(col = region), size = 1) +
facet_wrap(vars(region)) +
theme_bw()
decorate('graf9') %>%
flair('theme_bw')
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob)) +
geom_line(aes(col = region), size = 1) +
facet_wrap(vars(region)) +
theme_minimal()
decorate('graf9b') %>%
flair('theme_minimal')
ggplot(datos_covid, aes(x = fecha, y = casos_covid_pob)) +
geom_line(aes(col = region), size = 1) +
facet_wrap(vars(region)) +
theme_minimal() +
theme(legend.position = "none")
decorate('graf10') %>%
flair('theme(') %>%
flair('legend.position', background = "pink") %>%
flair('"none"', background = "Aquamarine")
knitr::include_url("https://ggplot2.tidyverse.org/reference/ggtheme.html")
knitr::include_url("https://www.data-to-viz.com/")
rm(list = ls())
dev.off()
source('C:/Users/pjagu/Dropbox/CLASES UDP/Curso UDP Data Science/Version 2020/Semana 2/Clase02_CodigoCovid.R', encoding = 'UTF-8')
## Datos COVID-19 | Examinar datos
str(datos_covid)
source('C:/Users/pjagu/Dropbox/CLASES UDP/Curso UDP Data Science/Version 2020/Semana 2/Clase02_CodigoCovid.R', encoding = 'UTF-8')
source('C:/Users/pjagu/Dropbox/CLASES UDP/Curso UDP Data Science/Version 2020/Semana 2/Clase02_CodigoCovid.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/pjagu/Dropbox/CLASES UDP/Curso UDP Data Science/Version 2020/Semana 2/Clase02_CodigoViz.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/pjagu/Dropbox/CLASES UDP/Curso UDP Data Science/Version 2020/Semana 2/Clase02_CodigoViz.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/pjagu/Dropbox/CLASES UDP/Curso UDP Data Science/Version 2020/Semana 2/Clase02_CodigoCovid.R', encoding = 'UTF-8', echo=TRUE)
library(tidyverse)
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv")
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv") %>%
ggplot(aes(x = anio, y = valor))
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv") %>%
ggplot(aes(x = anio, y = valor)) +
geom_point()
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv") %>%
ggplot(aes(x = anio, y = valor, col = enfermedad)) +
geom_line()
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv") %>%
ggplot(aes(x = anio, y = valor, col = enfermedad)) +
geom_line() %>%
facet_wrap(vars(enfermedad))
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv") %>%
ggplot(aes(x = anio, y = valor, col = enfermedad)) +
geom_line() +
facet_wrap(vars(enfermedad))
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv") %>%
ggplot(aes(x = anio, y = valor)) +
geom_line()
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv") %>%
ggplot(aes(x = anio, y = valor, group = enfermemdad)) +
geom_line()
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv") %>%
ggplot(aes(x = anio, y = valor, group = enfermedad)) +
geom_line()
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv") %>%
ggplot(aes(x = anio, y = valor, group = enfermedad)) +
geom_line() +
geom_line(data = filter(read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv"),
enfermedad == "Mental"), col = "red")
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv") %>%
ggplot(aes(x = anio, y = valor, group = enfermedad)) +
geom_line() +
geom_line(data = filter(read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv"),
enfermedad == "Mental"), col = "red", size = 2)
read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv") %>%
ggplot(aes(x = anio, y = valor, group = enfermedad)) +
geom_line() +
geom_line(data = filter(read_csv("../Tareas/Tarea 1/tarea_segurodiscapacidad.csv"),
enfermedad == "Mental"), col = "red", size = 2) +
theme_bw()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
error = FALSE,
fig.align = 'center',
out.width='60%')
ggplot(datos_mundo, aes(x = gdpPercap, y = ExpVida)) +
geom_point(col = "red")
setwd("C:/Users/pjagu/Dropbox/CLASES UDP")
library(read)
setwd("C:/Users/pjagu/Dropbox/CLASES UDP/Curso UDP Data Science/Version 2020/Semana 1/")
