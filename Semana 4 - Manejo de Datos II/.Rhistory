indicador == "Forest area (% of land area)" ~ "area_bosques",
indicador == "GDP per capita (constant 2005 US$)" ~ "PIB_percapita",
indicador == "Health expenditure per capita, PPP (constant 2005 international $)" ~ "gasto_medico_percapita",
indicador == "Labor force participation rate, female (% of female population ages 15+) (modeled ILO estimate)" ~ "participacion_laboral_femenina",
indicador == "Life expectancy at birth, total (years)" ~ "expectativa_vida",
indicador == "Malnutrition prevalence, weight for age (% of children under 5)" ~ "malnutricion",
indicador == "Population (Total)" ~ "poblacion",
indicador == "Urban population (% of total)" ~ "poblacion_urbana",
indicador == "Fossil fuel energy consumption (% of total)" ~ "consumo_combustible_fosil)",
indicador == "Poverty headcount ratio at $2 a day (PPP) (% of population)" ~ "pobreza",
indicador == "Public spending on education, total (% of government expenditure)" ~ "gasto_publico_educacion"))
# Cambie el nombre de los valores de la variable "indicador" a una forma más simple en español.
datosONU5 <- datosONU4 %>%
mutate(
indicador = case_when(
indicador == "CO2 emissions (metric tons per capita)" ~ "emisiones_co2",
indicador == "Fertility rate, total (births per woman)" ~ "tasa_fertilidad",
indicador == "Forest area (% of land area)" ~ "area_bosques",
indicador == "GDP per capita (constant 2005 US$)" ~ "PIB_percapita",
indicador == "Health expenditure per capita, PPP (constant 2005 international $)" ~ "gasto_medico_percapita",
indicador == "Labor force participation rate, female (% of female population ages 15+) (modeled ILO estimate)" ~ "participacion_laboral_femenina",
indicador == "Life expectancy at birth, total (years)" ~ "expectativa_vida",
indicador == "Malnutrition prevalence, weight for age (% of children under 5)" ~ "malnutricion",
indicador == "Population (Total)" ~ "poblacion",
indicador == "Urban population (% of total)" ~ "poblacion_urbana",
indicador == "Fossil fuel energy consumption (% of total)" ~ "consumo_combustible_fosil)",
indicador == "Poverty headcount ratio at $2 a day (PPP) (% of population)" ~ "pobreza",
indicador == "Public spending on education, total (% of government expenditure)" ~ "gasto_publico_educacion"))
datosONU5 %>%
mutate(
grupo_ingresos = case_when(
grupo_ingresos == "Low Income" ~ "Ingresos Bajos",
grupo_ingresos *** c("Lower Middle Income", "Upper Middle Income") ~ "Ingresos Medio-Bajo",
grupo_ingresos == "High Income" ~ "Ingresos Altos"),
region = case_when(
region == "East Asia and Pacific" ~ "Asia Oriente y Pacifico",
region == "Europe and Central Afica" ~ "Europa y Africa Central",
region == "Latin America and the Caribbean" ~ "Latinoamerica y el Caribe",
region == "Middle East and North Africa" ~ "Medio Oriente y Africa del Norte",
region == "North America" ~ "Norte America",
region == "South Asia" ~ "Asia del sur",
region == "Sub-saharan Africa" ~ "Africa subsahariana"))
datosONU5 %>%
mutate(
grupo_ingresos = case_when(
grupo_ingresos == "Low Income" ~ "Ingresos Bajos",
grupo_ingresos %in% c("Lower Middle Income", "Upper Middle Income") ~ "Ingresos Medio-Bajo",
grupo_ingresos == "High Income" ~ "Ingresos Altos"),
region = case_when(
region == "East Asia and Pacific" ~ "Asia Oriente y Pacifico",
region == "Europe and Central Afica" ~ "Europa y Africa Central",
region == "Latin America and the Caribbean" ~ "Latinoamerica y el Caribe",
region == "Middle East and North Africa" ~ "Medio Oriente y Africa del Norte",
region == "North America" ~ "Norte America",
region == "South Asia" ~ "Asia del sur",
region == "Sub-saharan Africa" ~ "Africa subsahariana"))
datosONU6 %>%
pivot_wider(names_from = indicador, values_from = valor)
datosONU %>%
pivot_longer(1:36, names_to = "anio", values_to = "valor") %>%
rename(
pais = `Country Name`,
indicador = `Series Name`
) %>%
left_join(region, by = c("pais" = "country_name")) %>%
left_join(grupo_ingresos, by = c("pais" = "country_name")) %>%
rename(grupo_ingresos = income_group) %>%
select(pais, region, grupo_ingresos, everything()) %>%
mutate(
indicador = case_when(
indicador == "CO2 emissions (metric tons per capita)" ~ "emisiones_co2",
indicador == "Fertility rate, total (births per woman)" ~ "tasa_fertilidad",
indicador == "Forest area (% of land area)" ~ "area_bosques",
indicador == "GDP per capita (constant 2005 US$)" ~ "PIB_percapita",
indicador == "Health expenditure per capita, PPP (constant 2005 international $)" ~ "gasto_medico_percapita",
indicador == "Labor force participation rate, female (% of female population ages 15+) (modeled ILO estimate)" ~ "participacion_laboral_femenina",
indicador == "Life expectancy at birth, total (years)" ~ "expectativa_vida",
indicador == "Malnutrition prevalence, weight for age (% of children under 5)" ~ "malnutricion",
indicador == "Population (Total)" ~ "poblacion",
indicador == "Urban population (% of total)" ~ "poblacion_urbana",
indicador == "Fossil fuel energy consumption (% of total)" ~ "consumo_combustible_fosil)",
indicador == "Poverty headcount ratio at $2 a day (PPP) (% of population)" ~ "pobreza",
indicador == "Public spending on education, total (% of government expenditure)" ~ "gasto_publico_educacion")) %>%
mutate(
grupo_ingresos = case_when(
grupo_ingresos == "Low Income" ~ "Ingresos Bajos",
grupo_ingresos %in% c("Lower Middle Income", "Upper Middle Income") ~ "Ingresos Medio-Bajo",
grupo_ingresos == "High Income" ~ "Ingresos Altos"),
region = case_when(
region == "East Asia and Pacific" ~ "Asia Oriente y Pacifico",
region == "Europe and Central Afica" ~ "Europa y Africa Central",
region == "Latin America and the Caribbean" ~ "Latinoamerica y el Caribe",
region == "Middle East and North Africa" ~ "Medio Oriente y Africa del Norte",
region == "North America" ~ "Norte America",
region == "South Asia" ~ "Asia del sur",
region == "Sub-saharan Africa" ~ "Africa subsahariana")) %>%
pivot_wider(names_from = indicador, values_from = valor)
datosONU %>%
pivot_longer(1:36, names_to = "anio", values_to = "valor") %>%
rename(
pais = `Country Name`,
indicador = `Series Name`
) %>%
left_join(region, by = c("pais" = "country_name")) %>%
left_join(grupo_ingresos, by = c("pais" = "country_name")) %>%
rename(grupo_ingresos = income_group) %>%
select(pais, region, grupo_ingresos, everything()) %>%
mutate(
indicador = case_when(
indicador == "CO2 emissions (metric tons per capita)" ~ "emisiones_co2",
indicador == "Fertility rate, total (births per woman)" ~ "tasa_fertilidad",
indicador == "Forest area (% of land area)" ~ "area_bosques",
indicador == "GDP per capita (constant 2005 US$)" ~ "PIB_percapita",
indicador == "Health expenditure per capita, PPP (constant 2005 international $)" ~ "gasto_medico_percapita",
indicador == "Labor force participation rate, female (% of female population ages 15+) (modeled ILO estimate)" ~ "participacion_laboral_femenina",
indicador == "Life expectancy at birth, total (years)" ~ "expectativa_vida",
indicador == "Malnutrition prevalence, weight for age (% of children under 5)" ~ "malnutricion",
indicador == "Population (Total)" ~ "poblacion",
indicador == "Urban population (% of total)" ~ "poblacion_urbana",
indicador == "Fossil fuel energy consumption (% of total)" ~ "consumo_combustible_fosil)",
indicador == "Poverty headcount ratio at $2 a day (PPP) (% of population)" ~ "pobreza",
indicador == "Public spending on education, total (% of government expenditure)" ~ "gasto_publico_educacion")) %>%
mutate(
grupo_ingresos = case_when(
grupo_ingresos == "Low Income" ~ "Ingresos Bajos",
grupo_ingresos %in% c("Lower Middle Income", "Upper Middle Income") ~ "Ingresos Medio-Bajo",
grupo_ingresos == "High Income" ~ "Ingresos Altos"),
region = case_when(
region == "East Asia and Pacific" ~ "Asia Oriente y Pacifico",
region == "Europe and Central Afica" ~ "Europa y Africa Central",
region == "Latin America and the Caribbean" ~ "Latinoamerica y el Caribe",
region == "Middle East and North Africa" ~ "Medio Oriente y Africa del Norte",
region == "North America" ~ "Norte America",
region == "South Asia" ~ "Asia del sur",
region == "Sub-saharan Africa" ~ "Africa subsahariana")) %>%
pivot_wider(names_from = indicador, values_from = valor) %>%
mutate(anio = str_sub(anio, 1, 4),
anio = as.numeric(anio))
datosONU %>%
pivot_longer(1:36, names_to = "anio", values_to = "valor") %>%
rename(
pais = `Country Name`,
indicador = `Series Name`
) %>%
left_join(region, by = c("pais" = "country_name")) %>%
left_join(grupo_ingresos, by = c("pais" = "country_name")) %>%
rename(grupo_ingresos = income_group) %>%
select(pais, region, grupo_ingresos, everything()) %>%
mutate(
indicador = case_when(
indicador == "CO2 emissions (metric tons per capita)" ~ "emisiones_co2",
indicador == "Fertility rate, total (births per woman)" ~ "tasa_fertilidad",
indicador == "Forest area (% of land area)" ~ "area_bosques",
indicador == "GDP per capita (constant 2005 US$)" ~ "PIB_percapita",
indicador == "Health expenditure per capita, PPP (constant 2005 international $)" ~ "gasto_medico_percapita",
indicador == "Labor force participation rate, female (% of female population ages 15+) (modeled ILO estimate)" ~ "participacion_laboral_femenina",
indicador == "Life expectancy at birth, total (years)" ~ "expectativa_vida",
indicador == "Malnutrition prevalence, weight for age (% of children under 5)" ~ "malnutricion",
indicador == "Population (Total)" ~ "poblacion",
indicador == "Urban population (% of total)" ~ "poblacion_urbana",
indicador == "Fossil fuel energy consumption (% of total)" ~ "consumo_combustible_fosil)",
indicador == "Poverty headcount ratio at $2 a day (PPP) (% of population)" ~ "pobreza",
indicador == "Public spending on education, total (% of government expenditure)" ~ "gasto_publico_educacion")) %>%
mutate(
grupo_ingresos = case_when(
grupo_ingresos == "Low Income" ~ "Ingresos Bajos",
grupo_ingresos %in% c("Lower Middle Income", "Upper Middle Income") ~ "Ingresos Medio-Bajo",
grupo_ingresos == "High Income" ~ "Ingresos Altos"),
region = case_when(
region == "East Asia and Pacific" ~ "Asia Oriente y Pacifico",
region == "Europe and Central Afica" ~ "Europa y Africa Central",
region == "Latin America and the Caribbean" ~ "Latinoamerica y el Caribe",
region == "Middle East and North Africa" ~ "Medio Oriente y Africa del Norte",
region == "North America" ~ "Norte America",
region == "South Asia" ~ "Asia del sur",
region == "Sub-saharan Africa" ~ "Africa subsahariana")) %>%
pivot_wider(names_from = indicador, values_from = valor) %>%
mutate(anio = str_sub(anio, 1, 4),
anio = as.numeric(anio)) %>%
filter(anio == 2007) %>%
group_by(grupo_ingresos, region) %>%
summarise(emisiones_co2 = mean(emisiones_co2, na.rm = TRUE))
region == "East Asia and Pacific" ~ "Asia Oriente y Pacifico",
region == "Europe and Central Afica" ~ "Europa y Africa Central",
region == "Latin America and the Caribbean" ~ "Latinoamerica y el Caribe",
region == "Middle East and North Africa" ~ "Medio Oriente y Africa del Norte",
region == "North America" ~ "Norte America",
region == "South Asia" ~ "Asia del sur",
region == "Sub-saharan Africa" ~ "Africa subsahariana")) %>%
pivot_wider(names_from = indicador, values_from = valor) %>%
mutate(anio = str_sub(anio, 1, 4),
anio = as.numeric(anio)) %>%
filter(anio == 2007) %>%
group_by(grupo_ingresos, region) %>%
summarise(emisiones_co2 = mean(emisiones_co2, na.rm = TRUE)) %>%
pivot_wider(names_from = grupo_ingresos, values_from = emisiones_co2)
# Modifique la forma de los datos de "ancho" a "largo". Tome las primeras 36 columnas y asigne los nombres a una
# nueva variable "anio" y sus valores correspondientes a una columna "valor".
datosONU %>%
pivot_longer(1:36, names_to = "anio", values_to = "valor") %>%
rename(
pais = `Country Name`,
indicador = `Series Name`
) %>%
left_join(region, by = c("pais" = "country_name")) %>%
left_join(grupo_ingresos, by = c("pais" = "country_name")) %>%
rename(grupo_ingresos = income_group) %>%
select(pais, region, grupo_ingresos, everything()) %>%
mutate(
indicador = case_when(
indicador == "CO2 emissions (metric tons per capita)" ~ "emisiones_co2",
indicador == "Fertility rate, total (births per woman)" ~ "tasa_fertilidad",
indicador == "Forest area (% of land area)" ~ "area_bosques",
indicador == "GDP per capita (constant 2005 US$)" ~ "PIB_percapita",
indicador == "Health expenditure per capita, PPP (constant 2005 international $)" ~ "gasto_medico_percapita",
indicador == "Labor force participation rate, female (% of female population ages 15+) (modeled ILO estimate)" ~ "participacion_laboral_femenina",
indicador == "Life expectancy at birth, total (years)" ~ "expectativa_vida",
indicador == "Malnutrition prevalence, weight for age (% of children under 5)" ~ "malnutricion",
indicador == "Population (Total)" ~ "poblacion",
indicador == "Urban population (% of total)" ~ "poblacion_urbana",
indicador == "Fossil fuel energy consumption (% of total)" ~ "consumo_combustible_fosil)",
indicador == "Poverty headcount ratio at $2 a day (PPP) (% of population)" ~ "pobreza",
indicador == "Public spending on education, total (% of government expenditure)" ~ "gasto_publico_educacion")) %>%
mutate(
grupo_ingresos = case_when(
grupo_ingresos == "Low Income" ~ "Ingresos Bajos",
grupo_ingresos %in% c("Lower Middle Income", "Upper Middle Income") ~ "Ingresos Medio-Bajo",
grupo_ingresos == "High Income" ~ "Ingresos Altos"),
region = case_when(
region == "East Asia and Pacific" ~ "Asia Oriente y Pacifico",
region == "Europe and Central Afica" ~ "Europa y Africa Central",
region == "Latin America and the Caribbean" ~ "Latinoamerica y el Caribe",
region == "Middle East and North Africa" ~ "Medio Oriente y Africa del Norte",
region == "North America" ~ "Norte America",
region == "South Asia" ~ "Asia del sur",
region == "Sub-saharan Africa" ~ "Africa subsahariana")) %>%
pivot_wider(names_from = indicador, values_from = valor) %>%
mutate(anio = str_sub(anio, 1, 4),
anio = as.numeric(anio)) %>%
filter(anio == 2007) %>%
group_by(grupo_ingresos, region) %>%
summarise(emisiones_co2 = mean(emisiones_co2, na.rm = TRUE)) %>%
pivot_wider(names_from = grupo_ingresos, values_from = emisiones_co2)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
error = FALSE,
fig.align = 'center',
out.width='60%')
library(tidyverse)
datosONU_tidy <- read_csv("datos/DatosONU_tidy.csv")
datosONU_tidy %>%
filter(country_name == "Chile") %>%
ggplot(aes(x = year, y = population_total)) +
geom_point() +
geom_line() +
theme_minimal()
datosONU_tidy %>%
filter(country_name == "Chile") %>%
ggplot(aes(x = year, y = population_total)) +
geom_point() +
geom_line() +
labs(x = NULL) +
theme_minimal()
graf_indicador_pais <- function(x, y){
y <- enquo(y)
datosONU_tidy %>%
filter(country_name == x) %>%
ggplot(aes(x = year, y = !!y)) +
geom_point() +
geom_line() +
labs(x = NULL) +
theme_minimal()
}
seq_along(paises)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
error = FALSE,
fig.align = 'center',
out.width='60%')
library(tidyverse)
paises <- c("Chile", "Argentina", "United States")
seq_along(paises)
?map
x <- 1:10
map(x, mean)
map_dbl(x, mean)
map_lgl(x, mean)
map_lgl(x, mean)
map_chr(x, mean)
map_dbl(x, mean)
map_int(x, mean)
x
x %>% as.integer()
##################
## Cargar datos ##
##################
mtcars
sqrt(3^2+4^2)
resultado <- vector()
for (i in 1:ncol(mtcars)){
resultado[i] <- mean(mtcars[,i])
}
resultado
mtcars[[1]]
mtcars[[2]]
map_dbl(mtcars, mean)
resultado
map_dbl(diamonds, max)
mtcars %>%
summarise(across(everything(), mean))
map_int(mtcars, mean)
map_chr(mtcars, mean)
diamonds %>%
summarise(across(everything(), max))
map_dbl(diamonds, mean)
map_dbl(diamonds, max)
map_chr(diamonds, max)
# Un último ejemplo de como hacer lo mismo
mtcars %>%
summarise(across(everything(), list(mean, max)))
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggplot2)
paises <- c("Chile", "Argentina", "United States")
paises[1]
for (i in 1:10){
2^i
}
?seq_along
seq_len(3)
seq_len(1:3)
seq_along(1:3)
seq_along(-1:3)
seq_along(-c(1:3))
options(htmltools.dir.version = FALSE)
library(knitr)
opts_chunk$set(
fig.align="center",
fig.height=4, #fig.width=6,
# out.width="748px", #out.length="520.75px",
dpi=300, #fig.path='Figs/',
cache=T,#, echo=F, warning=F, message=F,
echo = TRUE,
message = FALSE,
warning = FALSE,
error = FALSE
)
library(tidyverse)
library(hrbrthemes)
library(fontawesome)
library(tidymodels)
knitr::include_graphics("Imagenes/OLS.png")
?separate
tidyr::separate()
tidyr::separate()
tidyr::separate
?tidyr::separate
## Enfermedades respiratorias
glimpse(who)
library(dplyr)
library(tidyverse)
enfermedades <- who %>%
select(-iso2, -iso3)
## Donde comenzamos
enfermedades <- who %>%
select(-iso2, -iso3)
## ¿Qué información tenemos disponible?
names(enfermedades)
## Transformamos la forma de nuestros datos
(enfermedades2 <- enfermedades %>%
pivot_longer(-c(country:year),
names_to = "variables",
values_to = "valores"))
## Eliminaremos parte de la columna "variables" que no nos sirve
(enfermedades3 <- enfermedades2 %>%
mutate(variables = str_remove(variables, "new_"),
variables = str_remove(variables, "new")))
library(stringr)
## Eliminaremos parte de la columna "variables" que no nos sirve
(enfermedades3 <- enfermedades2 %>%
mutate(variables = str_remove(variables, "new_"),
variables = str_remove(variables, "new")))
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
error = FALSE,
fig.align = 'center',
out.width='60%')
library(tidyverse)
graf_indicador_pais <- function(x, y){
y <- enquo(y)
datosONU_tidy %>%
filter(country_name == x) %>%
ggplot(aes(x = year, y = !!y)) +
geom_point() +
geom_line() +
labs(x = NULL) +
theme_minimal()
}
datosONU_tidy <- read_csv("datos/DatosONU_tidy.csv")
datosONU_tidy %>%
filter(country_name == "Chile") %>%
ggplot(aes(x = year, y = population_total)) +
geom_point() +
geom_line() +
labs(x = NULL) +
theme_minimal()
graf_indicador_pais <- function(x, y){
y <- enquo(y)
datosONU_tidy %>%
filter(country_name == x) %>%
ggplot(aes(x = year, y = !!y)) +
geom_point() +
geom_line() +
labs(x = NULL) +
theme_minimal()
}
graf_indicador_pais("Chile", population_total)
datosONU_tidy
graficos <- list()
datosONU_tidy %>%
distinct(country_name)
datosONU_tidy %>%
distinct(country_name) %>%
pull()
paises <- datosONU_tidy %>%
distinct(country_name) %>%
pull()
graficos <- list()
for (i in seq_along(paises)){
graficos[[i]] <- graf_indicador_pais(paises[i], gdp_per_capita_constant_2005_us)
}
View(graficos)
graficos[[50]]
graficos[[1]]
paises
graficos[[15]]
graficos[[20]]
graficos[[25]]
graficos[[100]]
rm(list = ls())
resultado2 <- vector()
for (i in 1:ncol(diamonds)){
resultado2[i] <- median(resultado2[,i])
}
diamonds # Por defecto en R
######################
## Cargar librerías ##
######################
library(dplyr) # Manejo de datos
diamonds # Por defecto en R
library(purrr) # Iteraciones
diamonds
ggplot2::diamonds # Por defecto en R
?mtcars
library(ggplot2)
diamonds # Por defecto en R
resultado2 <- vector()
for (i in 1:ncol(diamonds)){
resultado2[i] <- median(resultado2[,i])
}
resultado <- vector()
for (i in 1:ncol(mtcars)){
resultado[i] <- mean(mtcars[,i])
}
resultado
resultado2 <- vector()
for (i in 1:ncol(diamonds)){
resultado2[i] <- median(resultado2[,i])
}
resultado2 <- vector()
for (i in 1:ncol(diamonds)){
resultado2[i] <- median(resultado2[,i])
}
resultado2 <- vector()
for (i in 1:ncol(diamonds)){
resultado2[i] <- median(diamonds[,i])
}
resultado2 <- vector()
for (i in 1:ncol(diamonds)){
resultado2[i] <- max(diamonds[,i])
}
i
ncol(diamonds)
resultado2 <- vector()
for (i in 1:ncol(diamonds)){
resultado2[i] <- max(diamonds[,i])
}
diamonds
?max
max(diamonds[,1])
max(diamonds[,2])
max(diamonds[,3])
diamonds %>%
summarise(across(everything(), max))
max(diamonds[,i])
resultado2 <- vector()
for (i in 1:ncol(diamonds)){
resultado2[i] <- max(diamonds[[i]])
}
resultado2
resultado2 <- vector()
for (i in 1:ncol(diamonds)){
resultado2[i] <- max(diamonds[i])
}
map_dbl(mtcars, mean)
